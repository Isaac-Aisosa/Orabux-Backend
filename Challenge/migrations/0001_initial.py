# Generated by Django 4.1.1 on 2022-10-12 02:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('attachVideo', models.FileField(upload_to='media/challenge/attachVideo')),
                ('attachAudio', models.FileField(upload_to='media/challenge/attachAudio')),
                ('attachImage', models.FileField(upload_to='media/challenge/attachImage')),
                ('voter', models.CharField(choices=[('public', 'public'), ('followers', 'followers'), ('selected', 'users')], default='public', max_length=150)),
                ('minimumVote', models.BigIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeMinimumVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BigIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(verbose_name=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward', models.CharField(blank=True, max_length=30, null=True)),
                ('active', models.BooleanField(verbose_name=True)),
            ],
        ),
        migrations.CreateModel(
            name='JoinChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to="media/challenge/<class 'Challenge.models.Challenge'>/Video")),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge', to='Challenge.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contestant', to=settings.AUTH_USER_MODEL)),
                ('vote', models.ManyToManyField(blank=True, related_name='voters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='challenge',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_type', to='Challenge.challengetype'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_creator', to=settings.AUTH_USER_MODEL),
        ),
    ]
